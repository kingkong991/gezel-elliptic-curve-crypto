dp half_adder (in x_1: ns(1);
					in x_2: ns(1);
					out output: ns(1);
					out carry: ns(1)) {
	sfg run {
		output = x_1 ^ x_2;
		carry = x_1 & x_2;
	}
} hardwired h_half_adder (half_adder) { run; }

dp half_adder2: half_adder

dp full_adder (in x_1: ns(1);
					in x_2: ns(1);
					in carry_in: ns(1);
					out output: ns(1);
					out carry:	ns(1)) {

	sig output_1:	ns(1);
	sig carry_1:	ns(1);

	sig output_2:	ns(1);
	sig carry_2:	ns(1);

	use half_adder(x_1, x_2, output_1, carry_1);
	use half_adder2(output_1, carry_in, output, carry_2);

	sfg run {
		// output = output_2; // No need for a duplicate signal.
		carry = carry_1 | carry_2;
	}

} hardwired h_full_adder (full_adder) { run; }
